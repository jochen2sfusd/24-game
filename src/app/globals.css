@import "tailwindcss";

@layer base {
  body {
    font-family: 'Inter', system-ui, sans-serif;
    background: linear-gradient(135deg, #1e3a8a 0%, #3730a3 50%, #1e1b4b 100%);
    min-height: 100vh;
    margin: 0;
    padding: 0;
  }
}

@layer components {
  /* Header Section - Dark Blue Bar */
  .header-section {
    background-color: rgb(30 58 138);
    padding: 0.75rem 1rem;
    display: flex;
    align-items: center;
    justify-content: space-between;
  }
  
  /* Header Icons */
  .header-icon {
    width: 2.5rem;
    height: 2.5rem;
    background-color: rgb(30 64 175);
    color: white;
    border-radius: 0.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 200ms;
    cursor: pointer;
    font-size: 1.125rem;
  }
  
  .header-icon:hover {
    background-color: rgb(29 78 216);
  }
  
  /* Game Board - Fixed 2x2 grid with no gaps, flush cards */
  .game-board {
    display: grid;
    grid-template-columns: repeat(2, minmax(0, 1fr));
    width: 100%;
    max-width: 24rem;
    margin-left: auto;
    margin-right: auto;
    padding: 1rem;
    gap: 0; /* No gaps between tiles */
  }
  
  /* Game Cards - Red squares flush together like in the image */
  .game-card {
    width: 6rem;
    height: 6rem;
    background-color: rgb(239 68 68);
    color: white;
    font-weight: 700;
    font-size: 1.875rem;
    box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 300ms;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    border-width: 2px;
    border-color: rgb(248 113 113);
    border-radius: 0; /* Square tiles with no rounded corners */
    background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
  }
  
  .game-card:hover {
    box-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(calc(var(--tw-scale-x) * 1.05)) scaleY(calc(var(--tw-scale-y) * 1.05));
  }
  
  .game-card:active {
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(calc(var(--tw-scale-x) * 0.95)) scaleY(calc(var(--tw-scale-y) * 0.95));
  }
  
  /* Empty positions - invisible but maintain grid structure */
  .game-card.empty {
    background-color: transparent;
    border-color: transparent;
    box-shadow: none;
    cursor: default;
    pointer-events: none;
  }
  
  .game-card.empty:hover {
    transform: none;
    box-shadow: none;
  }
  
  .game-card.selected {
    background-color: rgb(248 113 113);
    border-color: rgb(252 165 165);
    box-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(calc(var(--tw-scale-x) * 1.1)) scaleY(calc(var(--tw-scale-y) * 1.1));
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(4px + var(--tw-ring-offset-width)) rgb(254 202 202);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  }
  
  .game-card.pending {
    background-color: rgb(249 115 22);
    border-color: rgb(251 146 60);
    box-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(calc(var(--tw-scale-x) * 1.1)) scaleY(calc(var(--tw-scale-y) * 1.1));
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(4px + var(--tw-ring-offset-width)) rgb(254 215 170);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }
  
  .game-card.result {
    background-color: rgb(168 85 247);
    border-color: rgb(196 181 253);
    box-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
  }
  
  .card-content {
    position: relative;
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 0.5rem;
  }
  
  .card-number {
    font-size: 1.875rem;
    font-weight: 700;
  }
  
  .card-expression {
    font-size: 0.75rem;
    color: rgb(255 255 255 / 0.8);
    margin-top: 0.25rem;
    text-align: center;
    line-height: 1;
    font-size: 0.5rem;
    line-height: 0.7rem;
  }
  
  /* Operator Buttons - Colored circles like in the image */
  .operator-btn {
    width: 4rem;
    height: 4rem;
    border-radius: 9999px;
    color: white;
    font-weight: 700;
    font-size: 1.5rem;
    box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 300ms;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    border-width: 2px;
  }
  
  .operator-btn:hover {
    box-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(calc(var(--tw-scale-x) * 1.05)) scaleY(calc(var(--tw-scale-y) * 1.05));
  }
  
  .operator-btn:active {
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(calc(var(--tw-scale-x) * 0.95)) scaleY(calc(var(--tw-scale-y) * 0.95));
  }
  
  .operator-btn.plus {
    background-color: rgb(234 179 8);
    border-color: rgb(250 204 21);
  }
  
  .operator-btn.plus:hover {
    background-color: rgb(250 204 21);
  }
  
  .operator-btn.minus {
    background-color: rgb(59 130 246);
    border-color: rgb(96 165 250);
  }
  
  .operator-btn.minus:hover {
    background-color: rgb(96 165 250);
  }
  
  .operator-btn.multiply {
    background-color: rgb(249 115 22);
    border-color: rgb(251 146 60);
  }
  
  .operator-btn.multiply:hover {
    background-color: rgb(251 146 60);
  }
  
  .operator-btn.divide {
    background-color: rgb(34 197 94);
    border-color: rgb(74 222 128);
  }
  
  .operator-btn.divide:hover {
    background-color: rgb(74 222 128);
  }
  
  .operator-btn.selected {
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(calc(var(--tw-scale-x) * 1.1)) scaleY(calc(var(--tw-scale-y) * 1.1));
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(4px + var(--tw-ring-offset-width)) rgb(255 255 255 / 0.3);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  }
  
  /* Action Buttons */
  .action-btn {
    flex: 1 1 0%;
    padding: 0.75rem 1rem;
    border-radius: 0.5rem;
    font-weight: 600;
    color: white;
    box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 300ms;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    cursor: pointer;
    border-width: 2px;
    text-align: center;
  }
  
  .action-btn:hover {
    box-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(calc(var(--tw-scale-x) * 1.05)) scaleY(calc(var(--tw-scale-y) * 1.05));
  }
  
  .action-btn:active {
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(calc(var(--tw-scale-x) * 0.95)) scaleY(calc(var(--tw-scale-y) * 0.95));
  }
  
  .action-btn.primary {
    background-color: rgb(59 130 246);
    border-color: rgb(96 165 250);
  }
  
  .action-btn.primary:hover {
    background-color: rgb(96 165 250);
  }
  
  .action-btn.danger {
    background-color: rgb(239 68 68);
    border-color: rgb(248 113 113);
  }
  
  .action-btn.danger:hover {
    background-color: rgb(248 113 113);
  }
  
  /* Animations */
  @keyframes cardFlip {
    0% { transform: rotateY(0deg); }
    100% { transform: rotateY(180deg); }
  }
  
  @keyframes cardGlow {
    0%, 100% { box-shadow: 0 0 5px rgba(239, 68, 68, 0.5); }
    50% { box-shadow: 0 0 20px rgba(239, 68, 68, 0.8); }
  }
  
  @keyframes cardMerge {
    0% { transform: scale(1); }
    50% { transform: scale(1.1); }
    100% { transform: scale(1); }
  }
  
  .card-glow {
    animation: cardGlow 2s ease-in-out infinite;
  }
  
  .card-merge {
    animation: cardMerge 0.5s ease-in-out;
  }
  
  /* Responsive Design */
  @media (max-width: 640px) {
    .game-board {
      width: 100%;
      max-width: 20rem;
    }
    
    .game-card {
      width: 5rem;
      height: 5rem;
      font-size: 1.5rem;
    }
    
    .operator-btn {
      width: 3.5rem;
      height: 3.5rem;
      font-size: 1.25rem;
    }
    
    .action-btn {
      padding: 0.5rem 0.75rem;
      font-size: 0.875rem;
    }
    
    .card-expression {
      font-size: 0.4rem;
      line-height: 0.6rem;
    }
    
    .header-icon {
      width: 2rem;
      height: 2rem;
      font-size: 1rem;
    }
  }
  
  /* Success animation */
  @keyframes successPulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.05); }
    100% { transform: scale(1); }
  }
  
  .success-animation {
    animation: successPulse 0.5s ease-in-out;
  }
}
